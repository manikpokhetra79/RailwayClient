{"version":3,"sources":["components/SeatsNumber.js","components/App.js","utils/urls.js","reportWebVitals.js","index.js"],"names":["SeatsNumber","seatsArray","loading","remSeats","handleDeleteAll","setUpdater","updater","ticketsLeft","className","Button","onClick","Spinner","animation","role","Container","ListGroup","map","seat","index","Item","rowLetter","seatNumber","status","App","useState","seats","setSeats","setSeatsArray","coachArray","setCoachArray","setLoading","Row","Col","InputGroup","FormControl","type","name","placeholder","onChange","e","value","target","alert","fetch","method","body","JSON","stringify","headers","then","res","json","data","console","log","coach","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59f8c30e.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, ListGroup, Spinner, Button } from 'react-bootstrap';\n\nconst SeatsNumber = ({\n  seatsArray,\n  loading,\n  remSeats,\n  handleDeleteAll,\n  setUpdater,\n  updater,\n}) => {\n  let ticketsLeft = remSeats;\n\n  let handleButtonClick = () => {\n    handleDeleteAll();\n    setUpdater(true);\n  };\n  return (\n    <>\n      {' '}\n      <h2 className=\" text-center\">Booked Ticket Details</h2>\n      <h2>Remaining seats : {updater ? 80 : ticketsLeft}</h2>\n      {updater && <h2> Please refresh the page</h2>}\n      {remSeats === 0 && (\n        <Button className=\"mb-3\" onClick={handleButtonClick}>\n          Reset Tickets for Testing Purpose\n        </Button>\n      )}\n      {loading ? (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      ) : (\n        <Container>\n          <ListGroup>\n            {seatsArray &&\n              seatsArray.map((seat, index) => (\n                <ListGroup.Item key={index}>\n                  <p className=\"fs-6\">\n                    <span>Seat Number: </span>\n                    {seat.rowLetter + seat.seatNumber}\n                    <br /> <span>Status </span>\n                    <span className=\"badge bg-primary text-wrap text-capitalize \">\n                      {seat.status}\n                    </span>\n                  </p>\n                </ListGroup.Item>\n              ))}\n          </ListGroup>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default SeatsNumber;\n","import React, { useState } from 'react';\nimport { bookingApi, deleteSeatsApi } from '../utils/urls';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\nimport SeatsNumber from './SeatsNumber';\n\nconst App = () => {\n  const [seats, setSeats] = useState(0);\n  const [seatsArray, setSeatsArray] = useState([]);\n  const [coachArray, setCoachArray] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [updater, setUpdater] = useState(false);\n\n  let handleInputChange = (e) => {\n    let value = e.target.value;\n    setSeats(value);\n  };\n  let handleDeleteAll = () => {\n    fetch(deleteSeatsApi, {\n      method: 'DELETE',\n    }).catch((err) => console.log(err));\n  };\n  let bookSeats = () => {\n    fetch(bookingApi, {\n      method: 'POST',\n      body: JSON.stringify({\n        seats: seats,\n      }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setCoachArray(data.coach);\n        if ((data.status = 'success')) {\n          setSeatsArray(data.seats);\n          // setTimeout(() => {\n            setLoading(false);\n          // }, 500);\n        }\n      })\n      .catch((err) => console.log(err));\n    setUpdater(false);\n  };\n  let handleSubmit = () => {\n    if (seats > 7 || seats < 1) {\n      alert('Please enter numbers from 1 - 7 only');\n    } else {\n      //fetch api\n      bookSeats();\n      setLoading(true);\n    }\n  };\n  return (\n    <>\n      {' '}\n      <Container>\n        <Row>\n          <h1 className=\"text-primary mt-5 text-center\">\n            Railway Ticket Booking\n          </h1>\n        </Row>\n        <Row>\n          <Col>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                type=\"text\"\n                name=\"totalSeats\"\n                placeholder=\"No of seats 1-7\"\n                onChange={handleInputChange}\n              />\n              <Button onClick={handleSubmit}>Book Seats</Button>\n            </InputGroup>\n          </Col>\n        </Row>\n        <Row>\n          <SeatsNumber\n            seatsArray={seatsArray}\n            loading={loading}\n            remSeats={coachArray.remSeats}\n            handleDeleteAll={handleDeleteAll}\n            setUpdater={setUpdater}\n            updater={updater}\n          />\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","export const bookingApi =\n  'https://ticket-reservation-api.herokuapp.com/api/seats/bookSeats';\nexport const deleteSeatsApi =\n  'https://ticket-reservation-api.herokuapp.com/api/seats/deleteall';\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}